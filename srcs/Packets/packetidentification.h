#ifndef PACKETIDENTIFICATION_H
#define PACKETIDENTIFICATION_H

#include <QMap>

enum class PacketIdentifier {
    NsTeST,
    failc,
    clist_start,
    clist,
    clist_end,
    select,
    OK,
    c_close,
    f_stash_end,
    pulse,
    game_start,
    glist,
    lbs,
    npinfo,
    fd,
    tit,
    c_info_reset,
    c_info,
    lev,
    stat,
    rsfi,
    at,
    c_map,
    gp,
    wp,
    drop,
    in,
    get,
    out,
    die,
    mv,
    shop,
    su,
    cond,
    Char_NEW,
    Char_NEW_JOB,
    Char_DEL,
    info,
    success,
    sc_p_stc,
    inv,
    mvi,
    gold,
    ivn,
    walk,
    u_s,
    u_as,
    ski,
    cancel,
    sr,
    mslot,
    ms_c,
    qnamli,
    esf,
    preq,
    treq,
    wreq,
    CHAR_REN,
    pidx,
    pinit,
    c_mode,
    zzim,
    u_i,
    eqinfo,
    spk,
    sayi2,
    say,
    sayt,
    wear,
    gop,
    blins,
    pjoin,
    fins,
    sl,
    delay,
    guri,
    psl,
    pdelay,
    pski,
    u_ps,
    ptctl,
    suctl,
    pst,
    dpski,
    psr,
    petsr,
    petski,
    u_pet,
    dlgi,
    dlgi2,
    revive,
    tp,
    rp,
    eff,
    rest
}; const QMap<QString, PacketIdentifier> PacketToHeader {
    { "NsTeST", PacketIdentifier::NsTeST },
    { "failc", PacketIdentifier::failc },
    { "clist_start", PacketIdentifier::clist_start },
    { "clist", PacketIdentifier::clist },
    { "clist_end", PacketIdentifier::clist_end },
    { "select", PacketIdentifier::select },
    { "OK", PacketIdentifier::OK },
    { "c_close", PacketIdentifier::c_close },
    { "f_stash_end", PacketIdentifier::f_stash_end },
    { "pulse", PacketIdentifier::pulse },
    { "game_start", PacketIdentifier::game_start },
    { "glist", PacketIdentifier::glist },
    { "lbs", PacketIdentifier::lbs },
    { "npinfo", PacketIdentifier::npinfo },
    { "fd", PacketIdentifier::fd },
    { "tit", PacketIdentifier::tit },
    { "c_info_reset", PacketIdentifier::c_info_reset },
    { "c_info", PacketIdentifier::c_info },
    { "lev", PacketIdentifier::lev },
    { "stat", PacketIdentifier::stat },
    { "rsfi", PacketIdentifier::rsfi },
    { "at", PacketIdentifier::at },
    { "c_map", PacketIdentifier::c_map },
    { "gp", PacketIdentifier::gp },
    { "wp", PacketIdentifier::wp },
    { "drop", PacketIdentifier::drop },
    { "in", PacketIdentifier::in },
    { "get", PacketIdentifier::get },
    { "out", PacketIdentifier::out },
    { "die", PacketIdentifier::die },
    { "mv", PacketIdentifier::mv },
    { "shop", PacketIdentifier::shop },
    { "su", PacketIdentifier::su },
    { "cond", PacketIdentifier::cond },
    { "Char_NEW", PacketIdentifier::Char_NEW },
    { "Char_NEW_JOB", PacketIdentifier::Char_NEW_JOB },
    { "Char_DEL", PacketIdentifier::Char_DEL },
    { "info", PacketIdentifier::info },
    { "success", PacketIdentifier::success },
    { "sc_p_stc", PacketIdentifier::sc_p_stc },
    { "inv", PacketIdentifier::inv },
    { "mvi", PacketIdentifier::mvi },
    { "gold", PacketIdentifier::gold },
    { "ivn", PacketIdentifier::ivn },
    { "walk", PacketIdentifier::walk },
    { "u_s", PacketIdentifier::u_s },
    { "u_as", PacketIdentifier::u_as },
    { "ski", PacketIdentifier::ski },
    { "cancel", PacketIdentifier::cancel },
    { "sr", PacketIdentifier::sr },
    { "mslot", PacketIdentifier::mslot },
    { "ms_c", PacketIdentifier::ms_c },
    { "qnamli", PacketIdentifier::qnamli },
    { "esf", PacketIdentifier::esf },
    { "preq", PacketIdentifier::preq },
    { "treq", PacketIdentifier::treq },
    { "wreq", PacketIdentifier::wreq },
    { "CHAR_REN", PacketIdentifier::CHAR_REN },
    { "pidx", PacketIdentifier::pidx },
    { "pinit", PacketIdentifier::pinit },
    { "c_mode", PacketIdentifier::c_mode },
    { "zzim", PacketIdentifier::zzim },
    { "u_i", PacketIdentifier::u_i },
    { "eqinfo", PacketIdentifier::eqinfo },
    { "spk", PacketIdentifier::spk },
    { "sayi2", PacketIdentifier::sayi2 },
    { "say", PacketIdentifier::say },
    { "sayt", PacketIdentifier::sayt },
    { "wear", PacketIdentifier::wear },
    { "gop", PacketIdentifier::gop },
    { "blins", PacketIdentifier::blins },
    { "pjoin", PacketIdentifier::pjoin },
    { "fins", PacketIdentifier::fins },
    { "sl", PacketIdentifier::sl },
    { "delay", PacketIdentifier::delay },
    { "guri", PacketIdentifier::guri },
    { "pdelay", PacketIdentifier::pdelay },
    { "psl", PacketIdentifier::psl },
    { "pski", PacketIdentifier::pski },
    { "u_ps", PacketIdentifier::u_ps },
    { "ptctl", PacketIdentifier::ptctl },
    { "suctl", PacketIdentifier::suctl },
    { "pst", PacketIdentifier::pst },
    { "dpski", PacketIdentifier::dpski },
    { "psr", PacketIdentifier::psr },
    { "petski", PacketIdentifier::petski },
    { "petsr", PacketIdentifier::petsr },
    { "u_pet", PacketIdentifier::u_pet },
    { "dlgi", PacketIdentifier::dlgi },
    { "dlgi2", PacketIdentifier::dlgi2 },
    { "revive", PacketIdentifier::revive },
    { "tp", PacketIdentifier::tp },
    { "rp", PacketIdentifier::rp },
    { "eff", PacketIdentifier::eff },
    { "rest", PacketIdentifier::rest }
};


enum class PacketRole {
    LOGIN,
    WORLD
}; const QMap<QString, PacketRole> PacketToRole {
    { "NsTeST", PacketRole::LOGIN },
    { "failc", PacketRole::LOGIN },
    { "clist_start", PacketRole::WORLD },
    { "clist", PacketRole::WORLD },
    { "clist_end", PacketRole::WORLD },
    { "select", PacketRole::WORLD },
    { "OK", PacketRole::WORLD },
    { "c_close", PacketRole::WORLD },
    { "f_stash_end", PacketRole::WORLD },
    { "pulse", PacketRole::WORLD },
    { "game_start", PacketRole::WORLD },
    { "glist", PacketRole::WORLD },
    { "lbs", PacketRole::WORLD },
    { "npinfo", PacketRole::WORLD },
    { "tit", PacketRole::WORLD },
    { "fd", PacketRole::WORLD },
    { "c_info_reset", PacketRole::WORLD },
    { "c_info", PacketRole::WORLD },
    { "lev", PacketRole::WORLD },
    { "stat", PacketRole::WORLD },
    { "rsfi", PacketRole::WORLD },
    { "at", PacketRole::WORLD },
    { "c_map", PacketRole::WORLD },
    { "gp", PacketRole::WORLD },
    { "wp", PacketRole::WORLD },
    { "drop", PacketRole::WORLD },
    { "in", PacketRole::WORLD },
    { "get", PacketRole::WORLD },
    { "out", PacketRole::WORLD },
    { "die", PacketRole::WORLD },
    { "mv", PacketRole::WORLD },
    { "shop", PacketRole::WORLD },
    { "su", PacketRole::WORLD },
    { "cond", PacketRole::WORLD },
    { "Char_NEW", PacketRole::WORLD },
    { "Char_NEW_JOB", PacketRole::WORLD },
    { "Char_DEL", PacketRole::WORLD },
    { "info", PacketRole::WORLD },
    { "success", PacketRole::WORLD },
    { "sc_p_stc", PacketRole::WORLD },
    { "inv", PacketRole::WORLD },
    { "mvi", PacketRole::WORLD },
    { "gold", PacketRole::WORLD },
    { "ivn", PacketRole::WORLD },
    { "walk", PacketRole::WORLD },
    { "u_s", PacketRole::WORLD },
    { "u_as", PacketRole::WORLD },
    { "ski", PacketRole::WORLD },
    { "cancel", PacketRole::WORLD },
    { "sr", PacketRole::WORLD },
    { "mslot", PacketRole::WORLD },
    { "ms_c", PacketRole::WORLD },
    { "qnamli", PacketRole::WORLD },
    { "esf", PacketRole::WORLD },
    { "preq", PacketRole::WORLD },
    { "treq", PacketRole::WORLD },
    { "wreq", PacketRole::WORLD },
    { "CHAR_REN", PacketRole::WORLD },
    { "pidx", PacketRole::WORLD },
    { "pinit", PacketRole::WORLD },
    { "c_mode", PacketRole::WORLD },
    { "zzim", PacketRole::WORLD },
    { "u_i", PacketRole::WORLD },
    { "eqinfo", PacketRole::WORLD },
    { "spk", PacketRole::WORLD },
    { "sayi2", PacketRole::WORLD },
    { "say", PacketRole::WORLD },
    { "sayt", PacketRole::WORLD },
    { "wear", PacketRole::WORLD },
    { "gop", PacketRole::WORLD },
    { "blins", PacketRole::WORLD },
    { "pjoin", PacketRole::WORLD },
    { "fins", PacketRole::WORLD },
    { "sl", PacketRole::WORLD },
    { "delay", PacketRole::WORLD },
    { "guri", PacketRole::WORLD },
    { "pdelay", PacketRole::WORLD },
    { "psl", PacketRole::WORLD },
    { "pski", PacketRole::WORLD },
    { "u_ps", PacketRole::WORLD },
    { "ptctl", PacketRole::WORLD },
    { "suctl", PacketRole::WORLD },
    { "pst", PacketRole::WORLD },
    { "dpski", PacketRole::WORLD },
    { "psr", PacketRole::WORLD },
    { "petski", PacketRole::WORLD },
    { "petsr", PacketRole::WORLD },
    { "u_pet", PacketRole::WORLD },
    { "dlgi", PacketRole::WORLD },
    { "dlgi2", PacketRole::WORLD },
    { "revive", PacketRole::WORLD },
    { "tp", PacketRole::WORLD },
    { "rp", PacketRole::WORLD },
    { "eff", PacketRole::WORLD },
    { "rest", PacketRole::WORLD }
};


enum class PacketType {
    SERVER,
    CLIENT,
    BOTH
}; const QMap<QString, PacketType> PacketToType {
    { "NsTeST", PacketType::SERVER },
    { "failc", PacketType::SERVER },
    { "clist_start", PacketType::SERVER },
    { "clist", PacketType::SERVER },
    { "clist_start", PacketType::SERVER },
    { "OK", PacketType::SERVER },
    { "tit", PacketType::SERVER },
    { "fd", PacketType::SERVER },
    { "c_info_reset", PacketType::SERVER },
    { "c_info", PacketType::SERVER },
    { "lev", PacketType::SERVER },
    { "stat", PacketType::SERVER },
    { "rsfi", PacketType::SERVER },
    { "at", PacketType::SERVER },
    { "c_map", PacketType::SERVER },
    { "gp", PacketType::SERVER },
    { "wp", PacketType::SERVER },
    { "drop", PacketType::SERVER },
    { "in", PacketType::SERVER },
    { "out", PacketType::SERVER },
    { "die", PacketType::SERVER },
    { "mv", PacketType::SERVER },
    { "shop", PacketType::SERVER },
    { "su", PacketType::SERVER },
    { "cond", PacketType::SERVER },
    { "info", PacketType::SERVER },
    { "sc_p_stc", PacketType::SERVER },
    { "inv", PacketType::SERVER },
    { "gold", PacketType::SERVER },
    { "sr", PacketType::SERVER },
    { "ivn", PacketType::SERVER },
    { "ski", PacketType::SERVER },
    { "cancel", PacketType::SERVER },
    { "mslot", PacketType::SERVER },
    { "ms_c", PacketType::SERVER },
    { "qnamli", PacketType::SERVER },
    { "esf", PacketType::SERVER },
    { "pidx", PacketType::SERVER },
    { "pinit", PacketType::SERVER },
    { "c_mode", PacketType::SERVER },
    { "zzim", PacketType::SERVER },
    { "spk", PacketType::SERVER },
    { "sayi2", PacketType::SERVER },
    { "sayt", PacketType::SERVER },
    { "delay", PacketType::SERVER },
    { "pdelay", PacketType::SERVER },
    { "pski", PacketType::SERVER },
    { "pst", PacketType::SERVER },
    { "dpski", PacketType::SERVER },
    { "psr", PacketType::SERVER },
    { "petski", PacketType::SERVER },
    { "petsr", PacketType::SERVER },
    { "dlgi", PacketType::SERVER },
    { "dlgi2", PacketType::SERVER },
    { "revive", PacketType::SERVER },
    { "eff", PacketType::SERVER },
    { "tp", PacketType::SERVER },
    { "rp", PacketType::SERVER },
    { "get", PacketType::BOTH },
    { "say", PacketType::BOTH },
    { "guri", PacketType::BOTH },
    { "rest", PacketType::BOTH },
    { "mvi", PacketType::CLIENT },
    { "c_close", PacketType::CLIENT },
    { "Char_DEL", PacketType::CLIENT },
    { "f_stash_end", PacketType::CLIENT },
    { "pulse", PacketType::CLIENT },
    { "Char_NEW", PacketType::CLIENT },
    { "Char_NEW_JOB", PacketType::CLIENT },
    { "game_start", PacketType::CLIENT },
    { "glist", PacketType::CLIENT },
    { "lbs", PacketType::CLIENT },
    { "npinfo", PacketType::CLIENT },
    { "select", PacketType::CLIENT },
    { "walk", PacketType::CLIENT },
    { "u_s", PacketType::CLIENT },
    { "u_as", PacketType::CLIENT },
    { "preq", PacketType::CLIENT },
    { "treq", PacketType::CLIENT },
    { "wreq", PacketType::CLIENT },
    { "CHAR_REN", PacketType::CLIENT },
    { "u_i", PacketType::CLIENT },
    { "eqinfo", PacketType::CLIENT },
    { "wear", PacketType::CLIENT },
    { "gop", PacketType::CLIENT },
    { "blins", PacketType::CLIENT },
    { "pjoin", PacketType::CLIENT },
    { "fins", PacketType::CLIENT },
    { "sl", PacketType::CLIENT },
    { "psl", PacketType::CLIENT },
    { "u_ps", PacketType::CLIENT },
    { "ptctl", PacketType::CLIENT },
    { "suctl", PacketType::CLIENT },
    { "u_pet", PacketType::CLIENT }
};

#endif // PACKETIDENTIFICATION_H
